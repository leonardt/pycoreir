language: python

services:
    - docker

before_install:
    - docker pull keyiz/manylinux-coreir
    - docker run -d --name manylinux --rm -i -t keyiz/manylinux-coreir bash
    - docker exec manylinux git clone -b $TRAVIS_BRANCH https://github.com/leonardt/pycoreir
    - docker exec manylinux bash -c "cd pycoreir && python setup.py bdist_wheel"
    - docker exec manylinux bash -c "auditwheel show /pycoreir/dist/*.whl"
    # we should have any external linked libraries at this point
    - docker exec manylinux bash -c "cd pycoreir && auditwheel repair dist/*.whl"
    # install the wheel for testing
    - docker exec manylinux bash -c "cd pycoreir && pip install wheelhouse/*.whl"
    - docker exec manylinux pip install pytest

script:
    - docker exec manylinux pip install magma-lang  # For libcoreir-python test
    - docker exec manylinux pytest -s /pycoreir/tests/
    - docker exec manylinux ./pycoreir/tests/libcoreir-python/run_travis_test.sh
    # copy everything back
    - docker exec manylinux bash -c "ls /pycoreir/wheelhouse/*.whl" > wheels
    - while read whl; do docker cp manylinux:$whl .; done <wheels
    - ls *.whl

deploy:
  provider: pypi
  user: leonardt
  password:
    secure: EMYqO+p8gN4aKv6dwaF9YVoheoyYQ+DFYkrUUU7T0LF/q3E4cR514ENS92LhaaISjbecfhbinMEgPUNsswTzT9c0RCO3BsrcPEhHWSistFtXcLIbAz0gw9ARcNGs+TElA71V7gUeCPtNUD1Inw8+Dp9B7zKuUKabsOnvWQ6bCeaPiWTnAfbzXq0yK+njjEEPo510bQ4U8IR0NfJxyR/6TDPkMNsvV0M/jCJcmukNDnT2PnSpSuqNOec+5Nv4xJT1Ub2J6SPPEyG1IFWMjmd2jYlfbj8lIXFv1+FwWivAsfEsSyf3ZQyWBSlqc1Hjo8mbiu2p2nOuAj+zCDLf2ySkyXxKMPFq917osyyrohqLo6p2s6GPWCelWTywbD31ZdfpDh8f0abfEMc/d7RgVZjmzrczYny2x++asqkOnnP9paYKoydqHPeXOnSKeNsfgBVZT4JDpnp7FPtbyoPEjeQhN/+dSIoXEAs9zsAiumPPrc3i5TbvdYWROOULFCR+CSAvphKMuEefnYiAMJGrVgQ15D04ww9qCvmCI5oySv1xsDI0FRVVA6NlBD2rx1F5XPX9i66ga9o0UUgQwc4wgctowxgePvPvPgvFW+UQ5IjwQtUwVoV0AuULBl4qsGLdkUtHjhSyTYytoFDhV8tnwscwYzGhCaSVCOni30o2d1A3xV8=
  on:
    tags: true
    branch: master
notifications:
  slack:
    rooms:
      secure: vYqmNj2HcykuryVM6+KYnkT6XoAGhV+W90ln/hVrniUeGutZ5R/fxlF8T8zOtmM/CxcqPbsa/awusSiX77Xegrf8gEcdUy6Jmvlz68F89wmkua4RuMoUnymRoNNE+YE1jrNO/39X+gDSEbYlCob5TtWXBAlGDfIJ8rjaP9LJV1Y6lDvJeCp/k9RcJDs9OlPaGP237pWJUIKEN1BnGyAFSQbbdLF+mTg7BcZr5pT9iuNQAyjrZcle/DPdLg5V+C4IQCkA8lXnI2ushuL3xmrjQ4TBvUNrGojKTTir3fXkeU+Zed2jukvRVKjDyiKV2gWr1tqM3Nl3U7JIkJpTu6HxwRI16l2M35eE/1kmJ817AEc/2RepI6tPEYi3aLtAbLldltuYiiUvDVsf9sMS8ireqoHXEaPJD6IkrMp4Tm9TO/b267fC3lvrRYd927NjKlV0Pk/ZgcPKoNjP8aPxj2+FvoPlExdjEvwHFxWpTRzqnHJudYeKScFzSlFAW+vMIpNZ2JMBwcKL2ENwBIGX5T8mkkvKJcZGUS1Sv1sIqVaPuINW058a4ARSl/JHkE6KUW+452uOfWMhz+XD4NjOaAWK9So9Zw8g+x52+F5k4mlK7bkosqpkQ6uWYtHM42Wz2OYz2rL4S2EtetJf4/vLRAgzhRdmo9RDrYPRtInW8jcm7nM=
